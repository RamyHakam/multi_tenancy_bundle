"use strict";(self.webpackChunkmulti_tenancy_bundle_docs=self.webpackChunkmulti_tenancy_bundle_docs||[]).push([[40],{8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>l});var a=t(6540);const i={},s=a.createContext(i);function r(n){const e=a.useContext(s);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),a.createElement(s.Provider,{value:e},n.children)}},8771:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"getting-started/getting-started","title":"Getting Started","description":"Get up and running with the Symfony Multi-Tenancy Bundle in just a few steps. This guide combines installation, configuration, and first-steps usage into one cohesive workflow.","source":"@site/docs/getting-started/getting-started.md","sourceDirName":"getting-started","slug":"/getting-started/","permalink":"/multi_tenancy_bundle/getting-started/","draft":false,"unlisted":false,"editUrl":"https://github.com/RamyHakam/multi_tenancy_bundle/tree/master/docs-site/docs/getting-started/getting-started.md","tags":[],"version":"current","frontMatter":{"title":"Getting Started"},"sidebar":"tutorialSidebar","previous":{"title":"Architecture Overview","permalink":"/multi_tenancy_bundle/intro/architecture"},"next":{"title":"Core Concepts","permalink":"/multi_tenancy_bundle/concepts/core-concepts"}}');var i=t(4848),s=t(8453);const r={title:"Getting Started"},l=void 0,d={},c=[{value:"1. Install the Bundle",id:"1-install-the-bundle",level:2},{value:"With Symfony Flex (Recommended)",id:"with-symfony-flex-recommended",level:3},{value:"Manual Setup (Without Flex)",id:"manual-setup-without-flex",level:3},{value:"2. Configure Doctrine",id:"2-configure-doctrine",level:2},{value:"3. Run Main Database Migrations",id:"3-run-main-database-migrations",level:2},{value:"4. Create and Migrate Tenant Databases",id:"4-create-and-migrate-tenant-databases",level:2},{value:"Create a Tenant DB",id:"create-a-tenant-db",level:3},{value:"Apply Migrations to Tenants",id:"apply-migrations-to-tenants",level:3},{value:"5. Load Tenant Fixtures",id:"5-load-tenant-fixtures",level:2},{value:"6. Scaffold and Persist Tenant Entities",id:"6-scaffold-and-persist-tenant-entities",level:2},{value:"Troubleshooting &amp; Tips",id:"troubleshooting--tips",level:2}];function o(n){const e={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:"Get up and running with the Symfony Multi-Tenancy Bundle in just a few steps. This guide combines installation, configuration, and first-steps usage into one cohesive workflow."}),"\n",(0,i.jsx)(e.h2,{id:"1-install-the-bundle",children:"1. Install the Bundle"}),"\n",(0,i.jsx)(e.h3,{id:"with-symfony-flex-recommended",children:"With Symfony Flex (Recommended)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"composer require hakam/multi-tenancy-bundle\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Flex auto-registers the bundle in ",(0,i.jsx)(e.code,{children:"config/bundles.php"}),"."]}),"\n",(0,i.jsxs)(e.li,{children:["It publishes a default config to ",(0,i.jsx)(e.code,{children:"config/packages/hakam_multi_tenancy.yaml"}),"."]}),"\n",(0,i.jsx)(e.li,{children:"Scaffolds key directories:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-text",children:"src/Entity/Main/\nsrc/Entity/Tenant/\nmigrations/Main/\nmigrations/Tenant/\n"})}),"\n",(0,i.jsx)(e.h3,{id:"manual-setup-without-flex",children:"Manual Setup (Without Flex)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"composer require hakam/multi-tenancy-bundle\n"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["Register in ",(0,i.jsx)(e.code,{children:"config/bundles.php"}),":"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-php",children:"return [\n// ...\nHakam\\MultiTenancyBundle\\HakamMultiTenancyBundle::class => ['all' => true],\n];\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"2",children:["\n",(0,i.jsxs)(e.li,{children:["Create ",(0,i.jsx)(e.code,{children:"config/packages/hakam_multi_tenancy.yaml"})," and add:"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:"hakam_multi_tenancy:\n  tenant_database_className:  App\\Entity\\Main\\TenantDbConfig\n  tenant_database_identifier: id\n\n  tenant_connection:\n    host: 127.0.0.1\n    port: 3306\n    driver: pdo_mysql\n    charset: utf8\n    server_version: 5.7\n\n  tenant_migration:\n    tenant_migration_namespace: DoctrineMigrations\\Tenant\n    tenant_migration_path: migrations/Tenant\n\n  tenant_entity_manager:\n    tenant_naming_strategy: doctrine.orm.naming_strategy.underscore_number_aware\n    mapping:\n      type: attribute\n      dir: '%kernel.project_dir%/src/Entity/Tenant'\n      prefix: App\\Entity\\Tenant\n      alias: Tenant\n"})}),"\n",(0,i.jsxs)(e.ol,{start:"3",children:["\n",(0,i.jsx)(e.li,{children:"Create the scaffold directories manually if not present:"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-text",children:"src/Entity/Main/\nsrc/Entity/Tenant/\nmigrations/Main/\nmigrations/Tenant/\n"})}),"\n",(0,i.jsx)(e.h2,{id:"2-configure-doctrine",children:"2. Configure Doctrine"}),"\n",(0,i.jsxs)(e.p,{children:["In ",(0,i.jsx)(e.code,{children:"config/packages/doctrine.yaml"}),", ensure separate mapping for Main and default EM:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:"doctrine:\n  dbal:\n    default_connection: default\n    url: '%env(resolve:DATABASE_URL)%'\n\n  orm:\n    default_entity_manager: default\n    entity_managers:\n      default:\n        connection: default\n        auto_mapping: false\n        mappings:\n          Main:\n            is_bundle: false\n            dir: '%kernel.project_dir%/src/Entity/Main'\n            prefix: 'App\\\\Entity\\\\Main'\n            alias: App\n"})}),"\n",(0,i.jsxs)(e.p,{children:["And migrations in ",(0,i.jsx)(e.code,{children:"doctrine_migrations.yaml"}),":"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:"doctrine_migrations:\n  migrations_paths:\n    'DoctrineMigrations\\\\Main': '%kernel.project_dir%/src/Migrations/Main'\n"})}),"\n",(0,i.jsx)(e.h2,{id:"3-run-main-database-migrations",children:"3. Run Main Database Migrations"}),"\n",(0,i.jsx)(e.p,{children:"Generate and apply the initial schema for your main database:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"php bin/console doctrine:migrations:diff\nphp bin/console doctrine:migrations:migrate\n"})}),"\n",(0,i.jsxs)(e.p,{children:["Fetch the new ",(0,i.jsx)(e.code,{children:"tenant_db_config"})," table to store tenant connection details."]}),"\n",(0,i.jsx)(e.h2,{id:"4-create-and-migrate-tenant-databases",children:"4. Create and Migrate Tenant Databases"}),"\n",(0,i.jsx)(e.h3,{id:"create-a-tenant-db",children:"Create a Tenant DB"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# Create database for a specific tenant\nphp bin/console tenant:database:create --dbid=<id>\n\n# Create all missing tenant databases\nphp bin/console tenant:database:create --all\n\n# Default: create all missing databases (backward compatible)\nphp bin/console tenant:database:create\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Options:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"--dbid=<id>"}),": Create database for a specific tenant ID"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"--all"}),": Explicitly create all missing tenant databases"]}),"\n",(0,i.jsx)(e.li,{children:"No options: Default behavior (creates all missing databases)"}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:["The command uses the ",(0,i.jsx)(e.code,{children:"TenantDbConfig"})," record with the specified ID to provision a new database and update its status to ",(0,i.jsx)(e.code,{children:"DATABASE_CREATED"}),". If the database already exists, it will be skipped."]}),"\n",(0,i.jsx)(e.h3,{id:"apply-migrations-to-tenants",children:"Apply Migrations to Tenants"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# For a specific tenant:\nphp bin/console tenant:migration:migrate update --dbid=<id>\n\n# Bulk update all tenants:\nphp bin/console tenant:migration:migrate update --all\n"})}),"\n",(0,i.jsx)(e.h2,{id:"5-load-tenant-fixtures",children:"5. Load Tenant Fixtures"}),"\n",(0,i.jsx)(e.p,{children:"After migrations, seed demo or test data:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"php bin/console tenant:fixtures:load --dbid=<id> --append\nphp bin/console tenant:fixtures:load --all\n"})}),"\n",(0,i.jsxs)(e.p,{children:["Supports options: ",(0,i.jsx)(e.code,{children:"--group="}),", ",(0,i.jsx)(e.code,{children:"--purge-with-truncate"}),", ",(0,i.jsx)(e.code,{children:"--no-interaction"}),"."]}),"\n",(0,i.jsx)(e.h2,{id:"6-scaffold-and-persist-tenant-entities",children:"6. Scaffold and Persist Tenant Entities"}),"\n",(0,i.jsx)(e.p,{children:"In your controller or service:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-php",children:"<?php\n      public Class AppController extends AbstractController\n      {\n        public function __construct(\n        private EntityManagerInterface $mainEntityManager,\n        private TenantEntityManager $tenantEntityManager,\n        private EventDispatcherInterface $dispatcher\n    ) {\n    }\n      public function switchToLoggedInUserTenantDb(): void\n      {\n        $this->dispatcher->dispatch(new SwitchDbEvent($this->getUser()->getTenantDbConfig()->getId()));\n        // Now you can use the tenant entity manager to execute your queries.\n      }\n    }\n"})}),"\n",(0,i.jsx)(e.h2,{id:"troubleshooting--tips",children:"Troubleshooting & Tips"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Connection Refused"}),": Verify your tenant host/port credentials in ",(0,i.jsx)(e.code,{children:"TenantDbConfig"}),"."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Migration Not Found"}),": Ensure your ",(0,i.jsx)(e.code,{children:"migrations/Tenant"})," directory is configured in ",(0,i.jsx)(e.code,{children:"hakam_multi_tenancy.yaml"}),"."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Fixture Errors"}),": Only classes with ",(0,i.jsx)(e.code,{children:"#[TenantFixture]"})," will run under ",(0,i.jsx)(e.code,{children:"tenant:fixtures:load"}),"."]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"You\u2019re now ready to build and scale multi-tenant functionality in Symfony using the Multi-Tenancy Bundle!"})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(o,{...n})}):o(n)}}}]);