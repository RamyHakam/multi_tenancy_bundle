"use strict";(self.webpackChunkmulti_tenancy_bundle_docs=self.webpackChunkmulti_tenancy_bundle_docs||[]).push([[446],{8030:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"intro/overview","title":"Overview","description":"The Symfony Multi-Tenancy Bundle is a battle-tested toolkit for building large-scale, production-ready multi-tenant applications on Symfony. Whether you\u2019re running a global SaaS, a country-specific service, or a multi-vendor marketplace, this bundle gives you all the wiring you need to keep each tenant\u2019s data completely isolated, highly performant, and easy to manage.","source":"@site/docs/intro/overview.md","sourceDirName":"intro","slug":"/intro/overview","permalink":"/multi_tenancy_bundle/intro/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/RamyHakam/multi_tenancy_bundle/tree/master/docs-site/docs/intro/overview.md","tags":[],"version":"current","frontMatter":{"title":"Overview"},"sidebar":"tutorialSidebar","next":{"title":"Why Multi-Tenancy?","permalink":"/multi_tenancy_bundle/intro/why-multi-tenancy"}}');var i=t(4848),r=t(8453);const a={title:"Overview"},o=void 0,l={},d=[{value:"Why This Bundle Matters",id:"why-this-bundle-matters",level:2},{value:"\u2705 New in v3.0: Custom Provider &amp; Manager Override",id:"-new-in-v30-custom-provider--manager-override",level:2},{value:"Key Benefits",id:"key-benefits",level:2},{value:"Typical Use Cases",id:"typical-use-cases",level:2},{value:"How It Works in 3 Steps",id:"how-it-works-in-3-steps",level:2}];function c(e){const n={br:"br",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Symfony Multi-Tenancy Bundle"})," is a battle-tested toolkit for building large-scale, production-ready multi-tenant applications on Symfony. Whether you\u2019re running a global SaaS, a country-specific service, or a multi-vendor marketplace, this bundle gives you all the wiring you need to keep each tenant\u2019s data completely isolated, highly performant, and easy to manage."]}),"\n",(0,i.jsx)(n.h2,{id:"why-this-bundle-matters",children:"Why This Bundle Matters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"True Data Isolation"}),(0,i.jsx)(n.br,{}),"\n","Every tenant lives in its own database\u2014no shared tables, no schema hacks\u2014so you get rock-solid security and compliance (e.g. GDPR data residency)."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Zero-Downtime Tenant Provisioning"}),(0,i.jsx)(n.br,{}),"\n","Programmatically spin up new tenant databases (and apply migrations) on the fly, without interrupting existing tenants."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Seamless Runtime Switching"}),(0,i.jsx)(n.br,{}),"\n","Dispatch a single event (",(0,i.jsx)(n.code,{children:"SwitchDbEvent"}),") and the bundle automatically reconnects the EntityManager to the correct database for the duration of your request or console command."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Independent Migration Pipelines"}),(0,i.jsx)(n.br,{}),"\n","Keep your main application schema and each tenant\u2019s schema in separate migration directories. Run or roll back migrations globally or per-tenant in one command."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Fixture Loading per Tenant"}),(0,i.jsx)(n.br,{}),"\n","Annotate fixtures with ",(0,i.jsx)(n.code,{children:"#[TenantFixture]"})," and load test or demo data on a per-tenant basis, complete with dependency ordering and groups."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Custom Host & Credential Resolution"}),(0,i.jsx)(n.br,{}),"\n","Point different tenants to different database hosts, servers, or credentials based on data in your ",(0,i.jsx)(n.code,{children:"TenantDbConfig"}),"\u2014perfect for sharding, geo-distribution, or cloud-managed clusters."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h2,{id:"-new-in-v30-custom-provider--manager-override",children:"\u2705 New in v3.0: Custom Provider & Manager Override"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["In version 3.0, you can now completely override the default ",(0,i.jsx)(n.code,{children:"TenantConfigProviderInterface"})," and ",(0,i.jsx)(n.code,{children:"TenantDatabaseManagerInterface"})," with your own custom implementations."]}),"\n",(0,i.jsx)(n.p,{children:"This allows you to:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Load tenant configs from APIs, ENV variables, Redis, or secret managers"}),"\n",(0,i.jsx)(n.li,{children:"Use custom logic to manage DB credentials (e.g. hash, encrypt, or rotate passwords)"}),"\n",(0,i.jsx)(n.li,{children:"Integrate with external service registries or dynamic provisioning tools"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["To override, just use the ",(0,i.jsx)(n.code,{children:"#[AsAlias(...)]"})," attribute:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"#[AsAlias(TenantConfigProviderInterface::class)]\nclass MyCustomProvider implements TenantConfigProviderInterface\n{\n    // your custom implementation\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"key-benefits",children:"Key Benefits"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Benefit"}),(0,i.jsx)(n.th,{children:"Impact"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Database-per-Tenant"}),(0,i.jsx)(n.td,{children:"Strongest possible data isolation; audit-proof separation"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Runtime DB Switching"}),(0,i.jsx)(n.td,{children:"One-line event-driven switch\u2014no manual connection hoops"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Modular Migrations & Fixtures"}),(0,i.jsx)(n.td,{children:"Version and seed each tenant independently, or run bulk operations across all tenants"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Flexible Configuration"}),(0,i.jsx)(n.td,{children:"Per-tenant overrides for host, driver, server version, credentials"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Horizontal Scalability"}),(0,i.jsx)(n.td,{children:"Distribute tenant databases across multiple servers or regions"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Compliance & GDPR-Ready"}),(0,i.jsx)(n.td,{children:"Keep data in the right legal boundary by isolating at the database level"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"typical-use-cases",children:"Typical Use Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"B2B SaaS"}),(0,i.jsx)(n.br,{}),"\n","Each company gets its own database. Scale hundreds\u2014or thousands\u2014of clients without risk of crosstalk."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Geo-Distributed Services"}),(0,i.jsx)(n.br,{}),"\n","Keep European customers on EU-hosted DBs, APAC on Asia-Pacific clusters, etc., to meet latency and regulatory requirements."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"White-Label Platforms"}),(0,i.jsx)(n.br,{}),"\n","Spin up branded \u201cmini-apps\u201d for agencies, each with completely isolated data, theme, and configuration."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Multi-Vendor Marketplaces"}),(0,i.jsx)(n.br,{}),"\n","Vendors share code, but each vendor\u2019s products, orders, and analytics live in separate data stores."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"how-it-works-in-3-steps",children:"How It Works in 3 Steps"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Configure Your Tenant Registry"}),(0,i.jsx)(n.br,{}),"\n","Define an entity (e.g. ",(0,i.jsx)(n.code,{children:"TenantDbConfig"}),") that implements ",(0,i.jsx)(n.code,{children:"TenantDbConfigurationInterface"}),". This lives in your Main DB and holds each tenant\u2019s connection details."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Scaffold Your Entities & Migrations"}),(0,i.jsx)(n.br,{}),"\n","Split your code into ",(0,i.jsx)(n.code,{children:"src/Entity/Main/"})," and ",(0,i.jsx)(n.code,{children:"src/Entity/Tenant/"}),", and separate migrations under ",(0,i.jsx)(n.code,{children:"migrations/Main/"})," and ",(0,i.jsx)(n.code,{children:"migrations/Tenant/"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Switch & Operate"}),(0,i.jsx)(n.br,{}),"\n","Dispatch"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"$dispatcher->dispatch(new SwitchDbEvent($tenantId));\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);